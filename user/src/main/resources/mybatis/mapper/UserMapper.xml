<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bj.glocloud.user.dao.UserDAO">

    <resultMap id="userResultMap" type="com.bj.glocloud.entity.user.UserEntity">
        <result property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="phone" column="phone"/>
        <result property="mail" column="mail"/>
        <result property="licencePic" column="licence_pic"/>
        <result property="registerTime" column="register_time"/>
        <result property="registerTime" column="register_time"/>
        <result property="userTypeEnum" column="user_type" typeHandler="com.bj.glocloud.handler.EnumTypeHandler"/>
        <result property="userStateEnum" column="user_state" typeHandler="com.bj.glocloud.handler.EnumTypeHandler"/>

        <association property="roleEntity" javaType="com.bj.glocloud.entity.user.RoleEntity">
            <result property="id" column="role_id"/>
            <result property="name" column="role_name"/>
            <result property="desc" column="role_desc"/>

            <collection property="permissionList" ofType="com.bj.glocloud.entity.user.PermissionEntity">
                <result property="id" column="permission_id"/>
                <result property="permission" column="permission"/>
                <result property="desc" column="permission_desc"/>
            </collection>
        </association>
    </resultMap>


    <update id="batchUpdateUserState">
        UPDATE sys_user
        set user_state = #{userStateCode}
        where id in
        <foreach collection="userIdList"
                 index="index"
                 item="userId"
                 separator=","
                 open="(" close=")">
            #{userId}
        </foreach>
    </update>
    <update id="updateAddress">
        UPDATE address
        <set>
            <if test="addressUpdateReq.address != null">
                location = #{addressUpdateReq.address},
            </if>
            <if test="addressUpdateReq.name != null">
                name = #{addressUpdateReq.name},
            </if>
            <if test="addressUpdateReq.phone != null">
                phone = #{addressUpdateReq.phone},
            </if>
            <if test="addressUpdateReq.postCode != null">
                post_code = #{addressUpdateReq.postCode},
            </if>
        </set>
        WHERE id = #{addressUpdateReq.addressId} AND user_id = #{userId}
    </update>
    <insert id="createAddress">
        INSERT INTO glocloud.address (id, address, name, phone, post_code, user_id)
        VALUES (#{id}, #{address}, #{name}, #{phone}, #{postCode}, #{userId} )
    </insert>

    <delete id="deleteRole">
        DELETE FROM sys_role WHERE id = #{roleId}
    </delete>

    <delete id="deleteRolePermission">
        DELETE FROM sys_role_permission WHERE role_id = #{roleId}
    </delete>

    <delete id="deleteRoleMenu">
        DELETE FROM sys_role_menu WHERE role_id = #{roleId}
    </delete>
    <delete id="deleteLocation">
        DELETE FROM address where id = #{addressId} AND user_id = #{userId}
    </delete>


    <select id="findUsers" resultMap="userResultMap">
        SELECT user.id as id, username, phone, mail, licence_pic, register_time,
        user_type,
        user_state,
        role.id as role_id,
        role.name as role_name,
        role.desc as role_desc,
        permission.id as permission_id,
        permission.permission as permission,
        permission.desc as permission_desc
        FROM
        sys_user as user
        LEFT JOIN
        sys_role as role
        ON
        user.role_id = role.id

        LEFT JOIN
        sys_role_permission as role_permission
        ON
        role_permission.role_id = role.id

        LEFT JOIN
        sys_permission as permission
        ON
        role_permission.permission_id = permission.id

        <where>
            <if test="userQueryReq.id != null">
                user.id = #{userQueryReq.id}
            </if>
            <if test="userQueryReq.username != null">
                AND

                username = #{userQueryReq.username}
            </if>
            <if test="userQueryReq.password != null">
                AND
                password = #{userQueryReq.password}
            </if>
            <if test="userQueryReq.phone != null">
                AND
                phone = #{userQueryReq.phone}
            </if>
            <if test="userQueryReq.mail != null">
                AND
                mail = #{userQueryReq.mail}
            </if>
            <if test="userQueryReq.registerTimeStart != null">
                AND
                register_time &gt; #{userQueryReq.registerTimeStart}
            </if>
            <if test="userQueryReq.registerTimeEnd != null">
                AND
                register_time &lt; #{userQueryReq.registerTimeEnd}
            </if>
            <if test="userQueryReq.userType != null">
                AND
                user_type = #{userQueryReq.userType}
            </if>
            <if test="userQueryReq.userState != null">
                AND
                user_state = #{userQueryReq.userState}
            </if>
            <if test="userQueryReq.roleId != null">
                AND
                role_id = #{userQueryReq.roleId}
            </if>
        </where>

        <if test="userQueryReq.orderByRegisterTime != null and userQueryReq.orderByRegisterTime == 1">
            order by register_time DESC
        </if>
        <if test="userQueryReq.orderByRegisterTime != null and userQueryReq.orderByRegisterTime == 2">
            order by register_time ASC
        </if>
    </select>


    <select id="findRoles" resultType="com.bj.glocloud.entity.user.RoleEntity">
        SELECT * FROM sys_role
    </select>

    <select id="findPermissions" resultType="com.bj.glocloud.entity.user.PermissionEntity">
        SELECT * FROM sys_permission
    </select>

    <select id="findMenus" resultType="com.bj.glocloud.entity.user.MenuEntity">
        SELECT * FROM sys_menu
    </select>

    <select id="findAddresss" resultType="com.bj.glocloud.entity.user.AddressEntity">
        SELECT address.id as id,
        address.address as address,
        address.user_id as userId,
        address.post_code as postCode,
        address.phone as phone,
        address.name as name
        FROM glocloud.address as address WHERE glocloud.address.user_id = #{userId}
    </select>


    <insert id="createUser">
        INSERT INTO sys_user (id,username,password,phone,mail,licence_pic,register_time,user_type,user_state,role_id)
        VALUES
        (#{id},#{username},#{password},#{phone},#{mail},#{licencePic},#{registerTime},#{userTypeEnum.code},#{userStateEnum.code},#{roleEntity.id})
    </insert>

    <insert id="insertRoleMenu">
        INSERT INTO sys_role_menu (role_id,menu_id)
        VALUES
        <foreach collection="roleMenuReq.menuIdList" item="menuId" index="index" separator=",">
            (#{roleMenuReq.roleId},#{menuId})
        </foreach>
    </insert>

    <insert id="insertRolePermission">
        INSERT INTO sys_role_permission (role_id,permission_id)
        VALUES
        <foreach collection="rolePermissionReq.permissionIdList" item="permissionId" index="index" separator=",">
            (#{rolePermissionReq.roleId},#{permissionId})
        </foreach>
    </insert>


</mapper>